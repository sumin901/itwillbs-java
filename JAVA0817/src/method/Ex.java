package method;

public class Ex {

	public static void main(String[] args) {
// 접근제한자 : public static  리턴타입 : void 메서드명 : main 
		/*
		 *  < Method > 
		 * 
		 * 동작, 작업의 최소 단위 (= 작업 수행에 필요한 코드의 모음)
		 * 
		 * Method는 반드시 호출되야만 실행될 수 있다
		 * => 호출하는 Method : Caller, 호출당하는 Method : Worker
		 * 
		 * Method 호출 시 Method에 전달하는 값을 전달인자(Argument)라고 하며
		 * 이 전달 인자를 전달받아 저장하는 변수를 매개 변수(Parameter)라고 한다
		 * => 매개 변수는 필수 요소가 아니다 
		 * 
		 * 메서드가 호출되면 작업을 수행한 후에 반드시 호출한 위치로 돌아간다
		 * => 이 때 호출한 곳으로 전달하는 값을 리턴값(return value)라고 한다
		 * 
		 * 리턴 타입을 명시한 메서드는 반드시 return 문을 사용해 데이터를 리턴해야한다
		 * => * 단 리턴 타입이 void인 메서드는 return문을 생략해도 되고 리턴값 없이 return문만 기술할 수 있다
		 * => 메서드 내에서 return 문을 만나면 즉시 메서드를 종료하고 호출한 곳으로 되돌아간다
		 * => if 문 등의 조건식을 사용해 return 문을 실행할 경우
		 *    반드시 어떤 경우라도 return 문이 실행되도록 조건식을 작성해야한다
		 * 
		 * main() 메서드는 자바에서 유일하게 호출하지 않아도 
		 * 프로그램 실행 시점에서 자동으로 호출되는 메서드
		 * => main() 메서드 : 자바 프로그램의 시작점 (Starting Point)
		 * 
		 * - 메서드 호출 시 메서드 매개 변수와 일치하는 타입 및 개수의 데이터 전달이 필수
		 *   (메서드 호출 형태로 정의 형태가 일치해야한다)
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 	<Method 정의 기본 문법> 
		 * 
		 * [접근제한자] 리턴타입 메서드명 ( [매개변수선언] ) {
		 * 	메서드 호출 시 수행할 코드들
		 *  [return [리턴값];]
		 * }
		 *
		 *	<Method 호출 기본 문법>
		 * 
		 * 1. 리턴값이 없는 경우 : 메서드명( [데이터..] );
		 *
		 * 2. 리턴값이 있는 경우
		 *  1) 데이터타입 변수명 = 메서드명( [데이터..] );
		 *     : 리턴되는 데이터를 변수에 저장할 경우
		 *  2) system.out.println( 메서드명 ( [데이터..] ) )
		 *     : 리턴되는 값을 출력할 경우
		 * 	<메서드 형태 4가지>
		 * 
		 * 1. 파라미터 X, 리턴값 X
		 * 2. 파라미터 X, 리턴값 O
		 * 3. 파라미터 O, 리턴값 X
		 * 4. 파라미터 O, 리턴값 O
		 */
	System.out.println("불 좀 꺼줘");
	sister_1();	// 1. 파라미터 X, 리턴값 X
	System.out.println("고맙다");
	
	System.out.println("물 좀 줘");
//	sister_2(); // 2. 파라미터 X, 리턴값 O
	// 리턴값이 있는 메서드 호출 후 변수에 저장하거나 출력문에 사용가능
	// 만약, 아무 동작 없을 경우 메서드 호출 후 리턴값은 버려진다
//	System.out.println(sister_2()); // 리턴값을 변수에 저장하지 않고 직접 사용
	String result = sister_2(); // 메서드 호출 후 리턴값을 result에 저장 
	System.out.println(result);
	
	
	
	// *주의 : 리턴값이 없는 메서드를 출력문에서 호출하거나 변수에 대입 불가능
	
//	String result = sister_1();
//	System.out.println(sister_1());
	} // main() method 끝
	
	/* <Method 정의 기본 문법> 
	 * 
	 * [접근제한자] 리턴타입 메서드명 ( [매개변수선언] ) {
	 * 	메서드 호출 시 수행할 코드들
	 *  [return [리턴값];]
	 *  }
	 */
	
	// 1. 파라미터 X, 리턴값 X
	// -> 메서드 파라미터가 없으므로 선언부 소괄호()안에 아무것도 명시하지 않는다
	// 리턴값이 없으므로 리턴타입 부분에 특수한 데이터타입 void 타입을 명시한다
	
	public static void sister_1() {
		// 메서드가 호출됐을 때 수행할 작업들
		System.out.println("동생 : 불을 껐다");
	}
	
	// 2. 파라미터 X, 리턴값 O 
	/* -> 메서드 파라미터가 없으므로 선언부 소괄호()안에 아무것도 명시하지 않는다
	 * -> 리턴값이 있으므로 리턴 할 데이터와 일치하는 데이터 타입을 리턴 타입 부분에 명시한다
	 * 
	 * 
	 */
	public static String sister_2() {
		System.out.println("동생 : 물을 떠다줬다");
		return "물";
	}
	
	

} // Ex() class 끝 
